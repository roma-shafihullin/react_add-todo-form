{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","isCompleted","classNames","completed","id","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","visibleTodos","App","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","push","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abf458f8.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const isCompleted = classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': todo.completed === true },\n  );\n\n  return (\n    <article data-id={todo.id} className={isCompleted}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { User } from './types/user';\nimport { Todo } from './types/todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst visibleTodos = [...todos];\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0 || title.trim() === '') {\n      setTitleError(title.trim() === '');\n      setUserError(userId === 0);\n\n      return;\n    }\n\n    const lastId = Math.max(...visibleTodos.map(todo => todo.id));\n\n    const newTodo = {\n      id: lastId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleError(false);\n            }}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User: </label>\n          <select\n            id=\"select\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}